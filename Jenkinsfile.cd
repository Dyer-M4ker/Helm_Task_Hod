pipeline {
    agent any

    options {
        timestamps()
    }

    parameters {
        string(name: 'IMAGE_TAG', defaultValue: 'latest', description: 'Docker Hub tag to promote')
        string(name: 'TEST_TAG', defaultValue: 'test', description: 'Suffix for test deployment tag')
    }

    environment {
        DOCKERHUB_REPOSITORY = 'dyerm4ker/helm-task-hod'
        DOCKERHUB_CREDENTIALS = 'dockerhub-credentials'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Docker Login & Pull') {
            steps {
                withCredentials([usernamePassword(credentialsId: env.DOCKERHUB_CREDENTIALS, usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_PASSWORD')]) {
                    withEnv([
                            "REGISTRY_USER=${DOCKERHUB_USER}",
                            "REGISTRY_PASS=${DOCKERHUB_PASSWORD}",
                            "SOURCE_IMAGE=${env.DOCKERHUB_REPOSITORY}:${params.IMAGE_TAG}"
                    ]) {
                        bat '''
                        powershell -NoProfile -Command "$env:REGISTRY_PASS | docker login --username $env:REGISTRY_USER --password-stdin"
                        docker pull %SOURCE_IMAGE%
                        '''
                    }
                }
            }
        }

        stage('Promote to Test Environment') {
            steps {
                script {
                    env.TEST_IMAGE = "${env.DOCKERHUB_REPOSITORY}:${params.TEST_TAG}-${env.BUILD_NUMBER}"
                }
                withEnv(["SOURCE_IMAGE=${env.DOCKERHUB_REPOSITORY}:${params.IMAGE_TAG}"]) {
                    bat """
                    docker tag %SOURCE_IMAGE% %TEST_IMAGE%
                    docker push %TEST_IMAGE%
                    """
                }
            }
        }

        stage('Smoke Test Container') {
            steps {
                withEnv(["TEST_IMAGE=${env.TEST_IMAGE}"]) {
                    bat """
                    powershell -NoProfile -File scripts\\smoke-test.ps1 -Image %TEST_IMAGE%
                    """
                }
            }
        }
    }

    post {
        always {
            script {
                bat """
                docker image inspect %DOCKERHUB_REPOSITORY%:%IMAGE_TAG% >nul 2>&1 && docker image rm %DOCKERHUB_REPOSITORY%:%IMAGE_TAG% 2>nul
                if not "%TEST_IMAGE%"=="" (
                    docker image inspect %TEST_IMAGE% >nul 2>&1 && docker image rm %TEST_IMAGE% 2>nul
                )
                docker logout >nul 2>&1
                """
            }
        }
    }
}
